# BigQuery Backup & Restore Scripts

This directory contains utility scripts and example configurations for interacting with the BigQuery Backup & Restore Service.

## Contents

- `action.sh` - Main CLI script for executing backup and restore operations
- `examples/` - Directory containing example request JSON files
  - `backup_request.json` - Example backup configuration
  - `restore_request.json` - Example restore configuration
- `setup/` - Scripts for setting up test environments
  - `bigquery_dummy_data.sql` - SQL script to create test datasets and tables with sample data

## Prerequisites

- Google Cloud SDK (`gcloud`) installed and configured
- Appropriate permissions to access the BigQuery Backup & Restore Service
- `curl` command-line tool
- `bash` shell environment
- Access to BigQuery (for running setup scripts)

## Authentication

These scripts use Google Cloud authentication through the `gcloud` command. Make sure you're authenticated before running the scripts:

```bash
gcloud auth login
gcloud config set project YOUR_PROJECT_ID
```

For service accounts, use:

```bash
gcloud auth activate-service-account --key-file=path-to-service-account-key.json
```

## Usage

### Running Backup and Restore Operations

#### Basic Syntax

```bash
./action.sh <backup|restore> <path-to-request-file> [log-level]
```

Parameters:
- `<backup|restore>`: Specify the operation you want to perform
- `<path-to-request-file>`: Path to the JSON file containing your request configuration
- `[log-level]`: (Optional) Set logging level (DEBUG, INFO, WARN, ERROR) - defaults to INFO

#### Examples

Running a backup:
```bash
./action.sh backup ./examples/backup_request.json
```

Running a restore:
```bash
./action.sh restore ./examples/restore_request.json
```

Running with debug logging:
```bash
./action.sh backup ./examples/backup_request.json DEBUG
```

### Setting Up Test Data

The repository includes a SQL script to create sample BigQuery datasets and tables for testing.

To execute the SQL script:

```bash
# Using the BigQuery web console:
# 1. Go to https://console.cloud.google.com/bigquery
# 2. Click "Compose New Query"
# 3. Copy and paste the contents of setup/bigquery_dummy_data.sql
# 4. Click "Run"

# Or using gcloud CLI:
bq query --project_id=YOUR_PROJECT_ID --use_legacy_sql=false < setup/bigquery_dummy_data.sql
```

This script creates:
- `ecommerce_data` dataset with tables for customers, products, orders, etc.
- `analytics_dataset` with reporting and metrics tables
- Sample data in all tables ready for backup/restore testing

**Note:** You may need to modify the project ID in the SQL script before running it.

## Example Configurations

### Backup Request

The `backup_request.json` demonstrates a backup configuration with:
- Specific tables from the "ecommerce_data" dataset
- Pattern matching to include any table with "sales_" prefix
- All tables from "analytics_dataset"
- CSV export format with GZIP compression
- Multi-threaded processing (4 threads)

### Restore Request

The `restore_request.json` demonstrates a restore configuration with:
- Multiple datasets to restore
- CSV format import with specific delimiter settings
- Multi-threaded processing (5 threads)
- Specific backup timestamp to restore from

## Customizing Request Files

You can copy and modify the example request files for your specific needs:

1. Copy an example: `cp examples/backup_request.json my-backup-config.json`
2. Edit the configuration to match your requirements
3. Run with your custom configuration: `./action.sh backup my-backup-config.json`

## Troubleshooting

### Authentication Issues

If you see authorization errors, ensure your gcloud authentication is current:

```bash
gcloud auth print-identity-token
```

If this fails, re-authenticate using `gcloud auth login`.

### Connection Issues

If the script can't connect to the service endpoint, verify:
- The Cloud Run service is deployed and accessible
- Your account has proper permissions to invoke the service
- Network connectivity from your location to Google Cloud

### Debugging

Set the log level to DEBUG for more detailed information:

```bash
./action.sh backup ./examples/backup_request.json DEBUG
```

## Further Information

For more details about the BigQuery Backup & Restore Service API, refer to the main project documentation.